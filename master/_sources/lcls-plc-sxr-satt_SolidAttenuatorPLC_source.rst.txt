

DUTs
----


GVLs
----


Main
^^^^

::

    {attribute 'qualified_only'}
    VAR_GLOBAL
    (*
        Only includes motor definitions for the IOC
        These are hard-coded to be Main.M#,
        but are very convenient to store in a GVL,
        hence the confusing namespace here

        This should be refactored once the IOC
        supports arbitrary ads paths for motors
    *)
    (*
        Four identical systems:
        Instr.		Area		ID#			Z (m)
        TMO			FEE			AT1K4-SOLID	748
        NEH 2.2		H2.2		AT1K2-SOLID	784
        NEH 2.2		H2.2		AT2K2-SOLID	788.8
        TXI			H1.1		AT1K3-SOLID	~763

    *)
        {attribute 'pytmc' := 'pv: AT1K4:L2SI:MMS:01'}
        {attribute 'TcLinkTo' := '
            .bLimitForwardEnable  := TIIB[AT1K4-EL7047-01]^STM Status^Status^Digital input 1;
            .bLimitBackwardEnable := TIIB[AT1K4-EL7047-01]^STM Status^Status^Digital input 2;
        '}
        M1: DUT_MotionStage := (sName := 'AT1K4:L2SI:MMS:01');

        {attribute 'pytmc' := 'pv: AT1K4:L2SI:MMS:02'}
        {attribute 'TcLinkTo' := '
            .bLimitForwardEnable  := TIIB[AT1K4-EL7047-02]^STM Status^Status^Digital input 1;
            .bLimitBackwardEnable := TIIB[AT1K4-EL7047-02]^STM Status^Status^Digital input 2;
        '}
        M2: DUT_MotionStage := (sName := 'AT1K4:L2SI:MMS:02');

        {attribute 'pytmc' := 'pv: AT1K4:L2SI:MMS:03'}
        {attribute 'TcLinkTo' := '
            .bLimitForwardEnable  := TIIB[AT1K4-EL7047-03]^STM Status^Status^Digital input 1;
            .bLimitBackwardEnable := TIIB[AT1K4-EL7047-03]^STM Status^Status^Digital input 2;
        '}
        M3: DUT_MotionStage := (sName := 'AT1K4:L2SI:MMS:03');

        {attribute 'pytmc' := 'pv: AT1K4:L2SI:MMS:04'}
        {attribute 'TcLinkTo' := '
            .bLimitForwardEnable  := TIIB[AT1K4-EL7047-04]^STM Status^Status^Digital input 1;
            .bLimitBackwardEnable := TIIB[AT1K4-EL7047-04]^STM Status^Status^Digital input 2;
        '}
        M4: DUT_MotionStage := (sName := 'AT1K4:L2SI:MMS:04');

    END_VAR


POUs
----


PRG_1_PlcTask
^^^^^^^^^^^^^

::

    PROGRAM PRG_1_PlcTask
    VAR
        fbLogHandler: FB_LogHandler;

        {attribute 'pytmc' := 'pv: AT1K4:L2SI:'}
        {attribute 'TcLinkTo' := '

            .RTD_Axis1_1.iRaw := TIIB[AT1K4-EL3202-01]^RTD Inputs Channel 1^Value;
            .RTD_Axis1_1.bError := TIIB[AT1K4-EL3202-01]^RTD Inputs Channel 1^Status^Error;
            .RTD_Axis1_1.bUnderrange := TIIB[AT1K4-EL3202-01]^RTD Inputs Channel 1^Status^Underrange;
            .RTD_Axis1_1.bOverrange := TIIB[AT1K4-EL3202-01]^RTD Inputs Channel 1^Status^Overrange;

            .RTD_Axis1_2.iRaw := TIIB[AT1K4-EL3202-01]^RTD Inputs Channel 2^Value;
            .RTD_Axis1_2.bError := TIIB[AT1K4-EL3202-01]^RTD Inputs Channel 2^Status^Error;
            .RTD_Axis1_2.bUnderrange := TIIB[AT1K4-EL3202-01]^RTD Inputs Channel 2^Status^Underrange;
            .RTD_Axis1_2.bOverrange := TIIB[AT1K4-EL3202-01]^RTD Inputs Channel 2^Status^Overrange;


            .RTD_Axis2_1.iRaw := TIIB[AT1K4-EL3202-02]^RTD Inputs Channel 1^Value;
            .RTD_Axis2_1.bError := TIIB[AT1K4-EL3202-02]^RTD Inputs Channel 1^Status^Error;
            .RTD_Axis2_1.bUnderrange := TIIB[AT1K4-EL3202-02]^RTD Inputs Channel 1^Status^Underrange;
            .RTD_Axis2_1.bOverrange := TIIB[AT1K4-EL3202-02]^RTD Inputs Channel 1^Status^Overrange;

            .RTD_Axis2_2.iRaw := TIIB[AT1K4-EL3202-02]^RTD Inputs Channel 2^Value;
            .RTD_Axis2_2.bError := TIIB[AT1K4-EL3202-02]^RTD Inputs Channel 2^Status^Error;
            .RTD_Axis2_2.bUnderrange := TIIB[AT1K4-EL3202-02]^RTD Inputs Channel 2^Status^Underrange;
            .RTD_Axis2_2.bOverrange := TIIB[AT1K4-EL3202-02]^RTD Inputs Channel 2^Status^Overrange;


            .RTD_Axis3_1.iRaw := TIIB[AT1K4-EL3202-03]^RTD Inputs Channel 1^Value;
            .RTD_Axis3_1.bError := TIIB[AT1K4-EL3202-03]^RTD Inputs Channel 1^Status^Error;
            .RTD_Axis3_1.bUnderrange := TIIB[AT1K4-EL3202-03]^RTD Inputs Channel 1^Status^Underrange;
            .RTD_Axis3_1.bOverrange := TIIB[AT1K4-EL3202-03]^RTD Inputs Channel 1^Status^Overrange;

            .RTD_Axis3_2.iRaw := TIIB[AT1K4-EL3202-03]^RTD Inputs Channel 2^Value;
            .RTD_Axis3_2.bError := TIIB[AT1K4-EL3202-03]^RTD Inputs Channel 2^Status^Error;
            .RTD_Axis3_2.bUnderrange := TIIB[AT1K4-EL3202-03]^RTD Inputs Channel 2^Status^Underrange;
            .RTD_Axis3_2.bOverrange := TIIB[AT1K4-EL3202-03]^RTD Inputs Channel 2^Status^Overrange;


            .RTD_Axis4_1.iRaw := TIIB[AT1K4-EL3202-04]^RTD Inputs Channel 1^Value;
            .RTD_Axis4_1.bError := TIIB[AT1K4-EL3202-04]^RTD Inputs Channel 1^Status^Error;
            .RTD_Axis4_1.bUnderrange := TIIB[AT1K4-EL3202-04]^RTD Inputs Channel 1^Status^Underrange;
            .RTD_Axis4_1.bOverrange := TIIB[AT1K4-EL3202-04]^RTD Inputs Channel 1^Status^Overrange;

            .RTD_Axis4_2.iRaw := TIIB[AT1K4-EL3202-04]^RTD Inputs Channel 2^Value;
            .RTD_Axis4_2.bError := TIIB[AT1K4-EL3202-04]^RTD Inputs Channel 2^Status^Error;
            .RTD_Axis4_2.bUnderrange := TIIB[AT1K4-EL3202-04]^RTD Inputs Channel 2^Status^Underrange;
            .RTD_Axis4_2.bOverrange := TIIB[AT1K4-EL3202-04]^RTD Inputs Channel 2^Status^Overrange;

        '}
        prg_2_at1k4 : PRG_2_AT1K4;

    END_VAR
    fbLogHandler();

    prg_2_at1k4();

    END_PROGRAM


PRG_2_AT1K4
^^^^^^^^^^^

::

    FUNCTION_BLOCK PRG_2_AT1K4
    VAR_INPUT
    END_VAR
    VAR_OUTPUT
    END_VAR
    VAR
        (* EL3202-0020: 0.01 Â°C per digit *)
        {attribute 'pytmc' := 'pv: MMS:01:RTD1'}
        RTD_Axis1_1: FB_TempSensor := ( fResolution:=0.01 );
        {attribute 'pytmc' := 'pv: MMS:01:RTD2'}
        RTD_Axis1_2: FB_TempSensor := ( fResolution:=0.01 );

        {attribute 'pytmc' := 'pv: MMS:02:RTD1'}
        RTD_Axis2_1: FB_TempSensor := ( fResolution:=0.01 );
        {attribute 'pytmc' := 'pv: MMS:02:RTD2'}
        RTD_Axis2_2: FB_TempSensor := ( fResolution:=0.01 );

        {attribute 'pytmc' := 'pv: MMS:03:RTD1'}
        RTD_Axis3_1: FB_TempSensor := ( fResolution:=0.01 );
        {attribute 'pytmc' := 'pv: MMS:03:RTD2'}
        RTD_Axis3_2: FB_TempSensor := ( fResolution:=0.01 );

        {attribute 'pytmc' := 'pv: MMS:04:RTD1'}
        RTD_Axis4_1: FB_TempSensor := ( fResolution:=0.01 );
        {attribute 'pytmc' := 'pv: MMS:04:RTD2'}
        RTD_Axis4_2: FB_TempSensor := ( fResolution:=0.01 );


    END_VAR
    RTD_Axis1_1();
    RTD_Axis1_2();

    RTD_Axis2_1();
    RTD_Axis2_2();

    RTD_Axis3_1();
    RTD_Axis3_2();

    RTD_Axis4_1();
    RTD_Axis4_2();

    END_FUNCTION_BLOCK

